Version 0.4.1 [May 10, 2013]
************************************************************************************************************************
- Added removeSound, removeManifest, and removeAllSounds functions to Sound, to enable unloading of sounds.
- Added MobileSafe demo to show launching an "app" inside a touch event, enabling audio playback on mobile devices
- Added playEmptySound() method, which facilitates playback on mobile devices without user interaction
- HTMLAudioPlugin now using tag loop property to provide more reliable looping
- WebAudioPlugin added a look ahead approach to enable smooth looping
- Updated WebAudioPlugin to use a specific panning model (equal power). Matches the sound quality of the other plugins
- Fixed an issue that stopped WebAudioPlugin from loading sound files other than ogg, mp3, and wav with PreloadJS
- Fixed playback for secondary sounds in HTMLAudio Plugin that affected Firefox
- Fixed an issue with duration for secondary sounds in HTMLAudioPlugin in Firefox
- Fixed issue where failed or interrupted sound channels could not be used, resulting in less instances available then
	expected.
- Updated file validation RegExp. Supports double-byte characters, prevents partial matches, better
	support for relative paths, improved matching of domains, and modified the "file name" match to
	include the extension (file.mp3 instead of file). The match arguments have not changed otherwise.
- Added support for PhoneGap in WebAudioPlugin that allows it to be used on mobile devices
- Fixed naming of the fileload event (used to be "loadComplete"). The old event is still dispatched, but is deprecated
- Renamed the internal "sendLoadComplete" method to "sendFileLoadEvent"
- Fixed cleanup routine to happen before the Sound and instance events are dispatched, which caused issues if affecting
	the sound immediately after receiving the event.
- Corrected missing namespaces in SoundInstance overview
- Fixed playing sounds by ID that are preloaded using the Sound.registerSound() method
- Fixed path parsing in the createInstance method (thanks maljub01)
- Moved embedded SWF into a container, and positioned it off-screen
- Fixed documentation:
	* FlashPlugin: Main description caused FlashPlugin to not export correct documentation
	* SoundInstance/setMute was documented as a duplicate of mute
	* SoundInstance main example had incorrect event for "failed"
	* Added code samples throughout
	* Minor updates throughout documentation to formatting, wording, parameters, and private/protected
- Updated browser limitations:
	* iOS6: include info on web audio distortion bug when video element is present
	* Android: issues with HTML audio in Android Chrome
	* Flash: Audio delays when using the FlashPlugin
	* IE9: Information on the audio tag limit.
	* Safari: added info about requiring Quicktime for audio playback.

Version 0.4.0 [Feb 12, 2013]
************************************************************************************************************************
**   Please note PreloadJS 0.3.0 requires SoundJS 0.4.0 to preload audio. Earlier versions are incompatible. ***********
************************************************************************************************************************
- Class name change to createjs.Sound from createjs.SoundJS
- Added versions file that is automatically updated via the build process, which provides run-time
	version information on the new SoundJS object
- A few major performance updates
- Added default support for M4A, MP4, aiff, wma, and mid audio formats
- Changed how file extension support is determined so changes only need to be made to SoundJS
- Revised path parsing to support a larger range of file path formats
- Added sound registration and manifest registration allowing simple internal preloading, so Sounds can preload and play
	without PreloadJS.  This includes callback and EventDispatch as files load.
- Added default behavior to load src when play is called if src has not been registered or preloaded
- Removed global pause/resume
- Removed global setMasterVolume, in place of SoundJS.setVolume(), which is now global volume
- Added global volume/mute methods on plugins, can be used in place of setting properties of all instances and exist
	independent of those same properties on instances
- Added proper global mute, which affects sounds globally, instead of just applying mute to sounds
- Changed mute() to getMute() and setMute() on SoundJS and SoundInstances
- Removed id-based lookup
- Revised plugin approach, and simplified internal APIs
- Added EventDispatcher functionality to SoundJS and SoundInstance
- Added onSuccess callback and success event to SoundInstance to report successful play.
- Official WebAudio support via the new WebAudioPlugin, which is now the default audio handler
- Added create() method on SoundJS, which can be used to create a stopped sound
- Changed setPosition() method on SoundInstance so it is available on stopped instances
- Changed getDuration() method on SoundInstance so it returns the duration of stopped instances, instead of 0
- Changed default values set when SoundJS.play is called so instances retain position, volume, and pan unless explicitly
	changed
- Replaced proxy on Sound with a proxy on createjs namespace, createjs.proxy(method, scope, args*);
- Fixed issue to how delay was handled in SoundInstance so it will not fire if pause() or stop() is called before
	playback begins
- Fixed issues with indexOf that were sometimes preventing stop/mute, etc.
- Fixed issue with initial mute state in FlashPlugin
- Fixed an issue in FlashPlugin that caused getDuration to always return 0
- Fixed an issue in FlashPlugin that would cause a looping sound to loop from the same point it was paused from or set
	position to
- Fixed loop callback in FlashPlugin SoundInstance (previously it would not be called).
- Fixed an issue with FlashPlugin in IE that caused a race condition due to caching, which would stop it from working
	sometimes
- Fixed an issue with FlashPlugin that would cause a paused instance, once resumed, to not fire onComplete callback.
- Fixed an issue in HTMLAudioPlugin that caused it to incorrectly return isSupported as true when it should be false
- Better documentation throughout
- Improved examples in documentation
- Added tutorials: Basics, Mobile-safe approach, and SoundJS & PreloadJS.


Version 0.3.0 [Aug 24, 2012]
****************************************************************************************************
- moved all classes into a configurable createjs namespace
- Added better support for missing sounds. SoundJS returns a lightweight instance that won't fail
	when calls are made on it.
- Added static mute/unmute methods to independently control a global mute property.
- Added support for preloading WAV files
- Fixed flash preload support when in tag mode
- Added lightweight flash instance, which is code only
- Added a debug flag [showOutput] to FlashPlugin, which will log Flash Activity
- Fixed issue with canPlayType throwing runtime in non-supported browsers.


Version 0.2.0
****************************************************************************************************
Second release, corresponding with the release of the CreateJS suite of tools (createjs.com).
This version includes a target plugin model that abstracts audio playback to various plugins, which
can be prioritized. Other updates include controllable sound instances, which are returned when a
sound is played, providing a much easier way to control audio once it has started playback.


Version 0.1.0
****************************************************************************************************
Initial release.